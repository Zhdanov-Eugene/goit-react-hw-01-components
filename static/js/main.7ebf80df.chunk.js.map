{"version":3,"sources":["components/social-profile/Profile.module.css","components/friends/Friends.module.css","components/statistics/Statistics.module.css","components/transaction-history/Transaction.module.css","components/container/Container.module.css","components/social-profile/Profile.js","components/statistics/StatsList.js","components/statistics/Statistics.js","components/friends/FriendListItem.js","components/friends/FriendsList.js","components/transaction-history/TransactionHistory.js","components/container/Container.js","App.js","index.js"],"names":["module","exports","Profile","props","className","styles","profile","info","src","url","alt","avatar","name","tag","location","stats","item","label","quantity","followers","views","likes","getRandomColor","Math","floor","random","toString","StatsList","data","list","map","stat","style","backgroundColor","percentage","id","Statistics","title","statistics","defaultProps","FriendListItem","isOnline","online","offline","width","FriendsList","friends","friend","TransactionHistory","items","history","thead","tbody","type","amount","currency","propType","PropTypes","arrayOf","shape","string","isRequired","Container","children","container","App","user","statisticalData","transactions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7ebf80df.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__26ER_\",\"name\":\"Profile_name__9PjG3\",\"tag\":\"Profile_tag__33cL8\",\"location\":\"Profile_location__2_06Q\",\"stats\":\"Profile_stats__30i15\",\"statItem\":\"Profile_statItem__22u0q\",\"avatar\":\"Profile_avatar__dW7gr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Friends_list__2O1VR\",\"item\":\"Friends_item__2z563\",\"status\":\"Friends_status__QDVwT\",\"online\":\"Friends_online__3RgtC Friends_status__QDVwT\",\"offline\":\"Friends_offline__2ey-o Friends_status__QDVwT\",\"avatar\":\"Friends_avatar__3mqHd\",\"name\":\"Friends_name__FK9uZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__1lj-p\",\"title\":\"Statistics_title__1LjK1\",\"list\":\"Statistics_list__3uhbw\",\"item\":\"Statistics_item__3vmQ4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"history\":\"Transaction_history__1G9Ak\",\"thead\":\"Transaction_thead__oOlEN\",\"tbody\":\"Transaction_tbody__1zE8Z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__SMry0\"};","import React from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Profile.module.css';\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div className={styles.profile}>\r\n            <div className={styles.info}>\r\n                <img\r\n                    src={props.url}\r\n                    alt=\"Аватар пользователя\"\r\n                    className={styles.avatar}\r\n                />\r\n                <p className={styles.name}>{props.name}</p>\r\n                <p className={styles.tag}>@{props.tag}</p>\r\n                <p className={styles.location}>{props.location}</p>\r\n            </div>\r\n\r\n            <ul className={styles.stats}>\r\n                <li className={styles.item}>\r\n                    <span className={styles.label}>Followers</span>\r\n                    <span className={styles.quantity}> {props.followers}</span>\r\n                </li>\r\n                <li className={styles.item}>\r\n                    <span className={styles.label}> Views</span>\r\n                    <span className={styles.quantity}> {props.views}</span>\r\n                </li>\r\n                <li className={styles.item}>\r\n                    <span className={styles.label}>Likes</span>\r\n                    <span className={styles.quantity}>{props.likes}</span>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n    )\r\n};\r\n\r\nProfile.propTypes = {\r\n    url: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    tag: PropTypes.string.isRequired,\r\n    location: PropTypes.string.isRequired,\r\n    followers: PropTypes.number.isRequired,\r\n    views: PropTypes.number.isRequired,\r\n    likes: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Profile;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Statistics.module.css';\r\n\r\n\r\nconst StatsList = ({ data }) => {\r\n    return (\r\n        <ul className={styles.list}>\r\n            {data.map(stat => {\r\n                return (\r\n                    <li className={styles.item} style={{backgroundColor: getRandomColor()}} key={stat.id}>\r\n                        <span className=\"label\">{stat.label}</span>\r\n                        <span className=\"percentage\">{stat.percentage}</span>\r\n                    </li> \r\n                )\r\n            })}\r\n        </ul>\r\n    )\r\n}\r\n\r\nStatsList.propTypes = {\r\n    data: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            label: PropTypes.string.isRequired,\r\n            percentage: PropTypes.number.isRequired,\r\n        })\r\n    ),\r\n}\r\n\r\nfunction getRandomColor() {\r\n    const randomColor = '#'+Math.floor(Math.random()*16777215).toString(16);\r\n    return randomColor;\r\n}\r\n\r\nexport default StatsList;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport StatsList from './StatsList';\r\nimport styles from './Statistics.module.css';\r\n\r\n\r\nconst Statistics = ({ title, stats }) => {\r\n    return (\r\n        <section className={styles.statistics}>\r\n            {title && (\r\n                <h2 className={styles.title}>{title}</h2>\r\n            )}\r\n            <StatsList data={stats}/>\r\n        </section>\r\n)\r\n}\r\n\r\n\r\nStatistics.defaultProps = {\r\n    title: \"\",\r\n  };\r\n\r\nStatistics.propTypes = {\r\n    title: PropTypes.string,\r\n    stats: PropTypes.array.isRequired,\r\n}\r\n\r\nexport default Statistics;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from './Friends.module.css';\r\n\r\n\r\nconst FriendListItem = ({id, avatar, name, isOnline}) => {\r\n    return (\r\n        <li className={styles.item} key={id}>\r\n            <span className={isOnline ? styles.online : styles.offline}></span>\r\n            <img className={styles.avatar} src={avatar} alt={name} width=\"48\" />\r\n            <p className={styles.name}>{name}</p>\r\n        </li>\r\n    )\r\n}\r\n\r\nFriendListItem.propTypes = {\r\n    id: PropTypes.number.isRequired,\r\n    isOnline: PropTypes.bool.isRequired,\r\n    avatar: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n}\r\n\r\nexport default FriendListItem;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport FriendListItem from './FriendListItem';\r\n\r\nimport styles from './Friends.module.css';\r\n\r\n\r\nconst FriendsList = ({friends}) => {\r\n    return (\r\n        <ul className={styles.list}>\r\n            {friends.map(friend => {\r\n                return (\r\n                    <FriendListItem \r\n                        id={friend.id}\r\n                        avatar={friend.avatar}\r\n                        name={friend.name}\r\n                        isOnline={friend.isOnline}\r\n                    />\r\n                )\r\n            })}\r\n        </ul>\r\n    )\r\n}\r\n\r\nFriendsList.propTypes = {\r\n    friends: PropTypes.array.isRequired,\r\n}\r\n\r\nexport default FriendsList;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Transaction.module.css';\r\n\r\nconst TransactionHistory = ({ items }) => {\r\n    return (\r\n        <table className={styles.history}>\r\n            <thead className={styles.thead}>\r\n                <tr>\r\n                    <th>Type</th>\r\n                    <th>Amount</th>\r\n                    <th>Currency</th>\r\n                </tr>\r\n            </thead>\r\n\r\n            <tbody className={styles.tbody}>\r\n                {items.map(item => {\r\n                    return (\r\n                        <tr key={item.id}>\r\n                            <td>{item.type}</td>\r\n                            <td>{item.amount}</td>\r\n                            <td>{item.currency}</td>\r\n                        </tr>\r\n                    )\r\n                })}\r\n            </tbody>\r\n        </table>\r\n    )\r\n}\r\n\r\nTransactionHistory.propType = {\r\n    items: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.string.isRequired,\r\n            type: PropTypes.string.isRequired,\r\n            amount: PropTypes.string.isRequired,\r\n            currency: PropTypes.string.isRequired,\r\n        })\r\n    ),\r\n}\r\n\r\nexport default TransactionHistory;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport style from './Container.module.css';\r\n\r\nconst Container = ({children}) => {\r\n    return (\r\n        <div className={style.container}>{children}</div>\r\n    )\r\n}\r\n\r\nContainer.propTypes = {\r\n    children: PropTypes.node.isRequired,\r\n}\r\n\r\nexport default Container;","import React from 'react';\r\n\r\nimport Profile from './components/social-profile/Profile';\r\nimport user from './components/social-profile/user.json';\r\n\r\nimport Statistics from './components/statistics/Statistics'\r\nimport statisticalData from './components/statistics/statistical-data.json';\r\n\r\nimport FriendsList from './components/friends/FriendsList';\r\nimport friends from './components/friends/friends.json';\r\n\r\nimport TransactionHistory from './components/transaction-history/TransactionHistory';\r\nimport transactions from './components/transaction-history/transactions.json';\r\n\r\nimport Container from './components/container/Container';\r\n\r\nconst App = () => {\r\n  return (\r\n    <Container>\r\n      <Profile\r\n        url={user.avatar}\r\n        name={user.name}\r\n        tag={user.tag}\r\n        location={user.location}\r\n        followers={user.stats.followers}\r\n        views={user.stats.views}\r\n        likes={user.stats.likes}\r\n      />\r\n      <Statistics\r\n        title=\"Upload stats\"\r\n        stats={statisticalData}\r\n      />\r\n      <FriendsList\r\n        friends={friends}\r\n      />\r\n      <TransactionHistory\r\n        items={transactions}\r\n      />\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default App;","  \nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n// import 'modern-normalize/modern-normalize.css';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n)"],"sourceRoot":""}